<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MicroService.OA</name>
    </assembly>
    <members>
        <member name="T:MicroService.OA.AutofacModuleRegister">
            <summary>
            Autofac
            </summary>
        </member>
        <member name="M:MicroService.OA.AutofacModuleRegister.Load(Autofac.ContainerBuilder)">
            <summary>
            重写Autofac管道Load方法，在这里注册注入
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:MicroService.OA.BaseHttpContext">
            <summary>
            BaseHttpContext
            </summary>
        </member>
        <member name="F:MicroService.OA.BaseHttpContext.ServiceCollection">
            <summary>
            服务集合
            </summary>
        </member>
        <member name="P:MicroService.OA.BaseHttpContext.Current">
            <summary>
            当前上下文
            </summary>
        </member>
        <member name="T:MicroService.OA.Controllers.BaseController">
            <summary>
            基础控制器
            </summary>
        </member>
        <member name="P:MicroService.OA.Controllers.BaseController.UserInformation">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:MicroService.OA.Controllers.BaseController.UserRights">
            <summary>
            用户拥有的权限集合
            </summary>
        </member>
        <member name="P:MicroService.OA.Controllers.BaseController.UserMenus">
            <summary>
            用户菜单
            </summary>
        </member>
        <member name="T:MicroService.OA.Controllers.DepartmentController">
            <summary>
            部门管理
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.DepartmentController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IDepartmentRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误</param>
            <param name="iDepartment">部门</param>
        </member>
        <member name="M:MicroService.OA.Controllers.DepartmentController.GetListAsync(System.String)">
            <summary>
            获取部门列表
            </summary>
            <param name="Name">名称</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.DepartmentController.AddAsync(MicroService.Dto.OAModels.DepartmentAdd)">
            <summary>
            新增
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.DepartmentController.UpdateAsync(MicroService.Dto.OAModels.DepartmentUpdate)">
            <summary>
            修改
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.DepartmentController.DeleteAsync(System.Guid)">
            <summary>
            删除
            </summary>
            <param name="Id">Id</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.EmployeeContractController">
            <summary>
            职工合同
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeContractController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IEmployeeContractRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError"></param>
            <param name="iEmployeeContract"></param>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeContractController.GetPageAsync(System.String,System.String,System.Int16,System.Int32)">
            <summary>
            获取分页数据
            </summary>
            <param name="name">名称</param>
            <param name="code">合同编号</param>
            <param name="pageSize">每页记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeContractController.AddAsync(MicroService.Dto.OAModels.EmployeeContractAdd)">
            <summary>
            新增
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeContractController.UpdateAsync(MicroService.Dto.OAModels.EmployeeContractUpdate)">
            <summary>
            修改
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeContractController.DeleteAsync(System.Guid)">
            <summary>
            删除
            </summary>
            <param name="Id">数据id</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.EmployeeController">
            <summary>
            职工管理
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Repository.IEmployeeRepository,MicroService.Interfaces.IDepartmentRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError"></param>
            <param name="iEmployee"></param>
            <param name="iDepartment"></param>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.GetListAsync(System.String)">
            <summary>
            获取部门列表
            </summary>
            <param name="Name">名称</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.GetNotBindUserAsync(System.Nullable{System.Guid})">
            <summary>
            获取未绑定职工的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.GetPageAsync(System.Nullable{System.Guid},System.String,System.Int16,System.Int32)">
            <summary>
            获取分页数据
            </summary>
            <param name="departmentId">部门id</param>
            <param name="name">名称</param>
            <param name="pageSize">每页记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.GetAsync(System.Guid)">
            <summary>
            获取详情
            </summary>
            <param name="Id">数据id</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.AddAsync(MicroService.Dto.OAModels.EmployeeAdd)">
            <summary>
            新增
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.UpdateAsync(MicroService.Dto.OAModels.EmployeeUpdate)">
            <summary>
            修改
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.EmployeeController.DeleteAsync(System.Guid)">
            <summary>
            删除
            </summary>
            <param name="Id">数据id</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.SystemLogController">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.SystemLogController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.ISystemLogRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误</param>
            <param name="iLog">日志</param>
        </member>
        <member name="M:MicroService.OA.Controllers.SystemLogController.GetLoginLogPageAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int16,System.Int32)">
            <summary>
            登录日志分页
            </summary>
            <param name="account">账号</param>
            <param name="name">昵称</param>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="pageSize">每页记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SystemLogController.GetOperateLogPageAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int16,System.Int32)">
            <summary>
            操作日志分页
            </summary>
            <param name="account">账号</param>
            <param name="name">昵称</param>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <param name="pageSize">每页记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.LoginUserController">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.LoginUserController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IUserRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误数据</param>
            <param name="iUser">用户</param>
        </member>
        <member name="M:MicroService.OA.Controllers.LoginUserController.GetUserInfoAsync">
            <summary>
            获取登录用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.LoginUserController.UpdateUserAsync(MicroService.Dto.OAModels.UserInfoUpdate)">
            <summary>
            修改个人用户信息
            </summary>
            <param name="input">参数</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.SysMenuController">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.SysMenuController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IMenuRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误数据接口</param>
            <param name="iMenu">菜单数据接口</param>
        </member>
        <member name="M:MicroService.OA.Controllers.SysMenuController.GetMenusAsync(System.String)">
            <summary>
            获取菜单列表
            </summary>
            <param name="Name">菜单名称</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysMenuController.GetMenuRightsAsync(MicroService.Dto.OAModels.RightsIds)">
            <summary>
            获取菜单权限列表
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysMenuController.AddAsync(MicroService.Dto.OAModels.SysMenuAdd)">
            <summary>
            新增菜单
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysMenuController.UpdateAsync(MicroService.Dto.OAModels.SysMenuUpdate)">
            <summary>
            修改菜单
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysMenuController.DeleteAsync(System.Guid)">
            <summary>
            删除菜单
            </summary>
            <param name="Id">菜单Id</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.System.SysPermissionController">
            <summary>
            权限管理
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysPermissionController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IPermissionRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误数据接口</param>
            <param name="iPermission">权限数据接口</param>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysPermissionController.GetMenuPermissionAsync(System.Guid)">
            <summary>
            获取菜单权限列表
            </summary>
            <param name="menuId">菜单Id</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysPermissionController.AddAsync(MicroService.Dto.OAModels.SysPermissionAdd)">
            <summary>
            新增菜单权限
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysPermissionController.UpdateAsync(MicroService.Dto.OAModels.SysPermissionUpdate)">
            <summary>
            修改菜单权限
            </summary>
            <param name="input">输入实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysPermissionController.DeleteAsync(System.Guid)">
            <summary>
            删除权限
            </summary>
            <param name="Id">权限Id</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.System.SysRoleController">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IRoleRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误数据接口</param>
            <param name="iRole">角色数据接口</param>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.GetPageAsync(System.String,System.Int16,System.Int32)">
            <summary>
            角色分页
            </summary>
            <param name="Keyword">关键词</param>
            <param name="pageSize">每页记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.AddAsync(MicroService.Dto.OAModels.RoleAdd)">
            <summary>
            新增角色
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.UpdateAsync(MicroService.Dto.OAModels.RoleUpdate)">
            <summary>
            修改角色
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.UpdateAsync(System.Guid)">
            <summary>
            删除角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.GetUsersAsync">
            <summary>
            获取用户列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.GetRoleUserAsync(System.Guid)">
            <summary>
            获取角色成员
            </summary>
            <param name="RoleId">角色id</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.System.SysRoleController.RoleUserAsync(MicroService.Dto.OAModels.RoleUserManage)">
            <summary>
            角色成员管理
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Controllers.SysUserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:MicroService.OA.Controllers.SysUserController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.IUserRepository)">
            <summary>
            构造函数
            </summary>
            <param name="iError">错误数据接口</param>
            <param name="iUser">用户数据接口</param>
        </member>
        <member name="M:MicroService.OA.Controllers.SysUserController.GetPageAsync(System.String,System.String,System.Int16,System.Int32)">
            <summary>
            获取分页
            </summary>
            <param name="Account">账号</param>
            <param name="Name">昵称</param>
            <param name="pageSize">每页记录数</param>
            <param name="pageIndex">页码</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysUserController.GetAsync(System.Guid)">
            <summary>
            获取详情
            </summary>
            <param name="Id">数据id</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysUserController.AddAsync(MicroService.Dto.OAModels.UserAdd)">
            <summary>
            新增用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysUserController.UpdateAsync(MicroService.Dto.OAModels.UserUpdate)">
            <summary>
            修改
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.Controllers.SysUserController.DeleteAsync(System.Guid)">
            <summary>
            删除用户
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.SysLoginController">
            <summary>
            登录
            </summary>
        </member>
        <member name="M:MicroService.OA.SysLoginController.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.ILoginUserRepository,MicroService.Extend.IHttpAPIInvoker,Microsoft.Extensions.Options.IOptions{MicroService.Dto.OAModels.LoginConfig})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:MicroService.OA.SysLoginController.LoginAsync(MicroService.Dto.OAModels.LoginDto)">
            <summary>
            登录
            </summary>
            <param name="input">实体</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.SysLoginController.RefreshTokenAsync(System.String)">
            <summary>
            刷新token
            </summary>
            <param name="refresh_token">刷新token</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.Job.OperateLogTimeJob">
            <summary>
            定时任务(在redis中取操作日志保存数据库)
            </summary>
        </member>
        <member name="M:MicroService.OA.Job.OperateLogTimeJob.#ctor(MicroService.Interfaces.IErrorRepository,MicroService.Interfaces.ISystemLogRepository,MicroService.Extend.IRedisInvoker)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:MicroService.OA.Job.OperateLogTimeJob.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            定时执行
            </summary>
            <param name="stoppingToken"></param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.AppHelper">
            <summary>
            获取配置文件帮助类型
            </summary>
        </member>
        <member name="M:MicroService.OA.AppHelper.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:MicroService.OA.AppHelper.ReadAppSettings(System.String[])">
            <summary>
            读取指定节点的字符串
            </summary>
            <param name="sessions"></param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.AppHelper.ReadAppSettings``1(System.String[])">
            <summary>
            读取实体信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.OutPutMethod`1">
            <summary>
            输出方法
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MicroService.OA.OutPutMethod`1.Success(`0,System.Int32,System.String)">
            <summary>
            返回成功
            </summary>
            <param name="data">返回数据</param>
            <param name="errType">是否显示提示（1：显示，其余不显示）</param>
            <param name="message">提示信息</param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.OutPutMethod`1.Success(System.Collections.Generic.List{System.String},`0,System.Int32,System.String)">
            <summary>
            返回成功
            </summary>
            <param name="Rights"></param>
            <param name="Data"></param>
            <param name="ErrType"></param>
            <param name="Message"></param>
            <returns></returns>
        </member>
        <member name="M:MicroService.OA.OutPutMethod`1.Failure(System.String,`0,System.Int32)">
            <summary>
            返回失败
            </summary>
            <param name="message">提示信息</param>
            <param name="data">返回数据</param>
            <param name="statusCode">HTTP状态码</param>
            <returns></returns>
        </member>
        <member name="T:MicroService.OA.WebsocketHandlerMiddleware">
            <summary>
            websocket中间件
            </summary>
        </member>
        <member name="M:MicroService.OA.WebsocketHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory,MicroService.Interfaces.IChatGroupRepository)">
            <summary>
            构造函数
            </summary>
            <param name="next"></param>
            <param name="loggerFactory"></param>
            <param name="iChatGroup"></param>
        </member>
        <member name="M:MicroService.OA.WebsocketHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
    </members>
</doc>
